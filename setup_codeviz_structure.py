import os

project_structure = {
    "CodeViz_Refactored": [
        "app.py",
        "controller.py",
        "README.md",
        {"db": ["content.db"]},  # content.db will be created later via script or SQLite
        {"pages": [
            "home.py",
            "concepts.py",
            "learning_module.py",
            "compiler_launcher.py",
            "applications.py"
        ]},
        {"utils": [
            "db_utils.py",
            "theme.py"
        ]}
    ]
}

def create_structure(base_path, structure):
    for item in structure:
        if isinstance(item, dict):  # Subfolder
            for folder, contents in item.items():
                folder_path = os.path.join(base_path, folder)
                os.makedirs(folder_path, exist_ok=True)
                create_structure(folder_path, contents)
        else:  # File
            file_path = os.path.join(base_path, item)
            if item.endswith(".db"):
                open(file_path, "ab").close()  # Create empty binary db file
            else:
                with open(file_path, "w", encoding="utf-8") as f:
                    f.write(f"# {item} - generated by setup script\n")

def main():
    base_dir = list(project_structure.keys())[0]
    if not os.path.exists(base_dir):
        os.mkdir(base_dir)
    create_structure(base_dir, project_structure[base_dir])
    print(f"âœ… Project '{base_dir}' initialized successfully.")

if __name__ == "__main__":
    main()
